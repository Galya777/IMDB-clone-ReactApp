[{"/home/galya777/AWS/courseProject/IMDB-clone-ReactApp/src/index.js":"1","/home/galya777/AWS/courseProject/IMDB-clone-ReactApp/src/App.js":"2","/home/galya777/AWS/courseProject/IMDB-clone-ReactApp/src/components/header/Header.js":"3","/home/galya777/AWS/courseProject/IMDB-clone-ReactApp/src/components/movieList/movieList.js":"4","/home/galya777/AWS/courseProject/IMDB-clone-ReactApp/src/pages/movieDetail/movie.js":"5","/home/galya777/AWS/courseProject/IMDB-clone-ReactApp/src/pages/home/home.js":"6","/home/galya777/AWS/courseProject/IMDB-clone-ReactApp/src/components/card/card.js":"7"},{"size":175,"mtime":1717743152250,"results":"8","hashOfConfig":"9"},{"size":753,"mtime":1717743152250,"results":"10","hashOfConfig":"9"},{"size":763,"mtime":1717743152250,"results":"11","hashOfConfig":"9"},{"size":1027,"mtime":1717743152250,"results":"12","hashOfConfig":"9"},{"size":4722,"mtime":1717743152251,"results":"13","hashOfConfig":"9"},{"size":2329,"mtime":1717743152251,"results":"14","hashOfConfig":"9"},{"size":1464,"mtime":1717743152250,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","suppressedMessages":"18","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"10edbvx",{"filePath":"19","messages":"20","suppressedMessages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25"},{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29"},{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":2,"source":"33"},{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37"},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41"},"/home/galya777/AWS/courseProject/IMDB-clone-ReactApp/src/index.js",[],[],"/home/galya777/AWS/courseProject/IMDB-clone-ReactApp/src/App.js",[],[],"/home/galya777/AWS/courseProject/IMDB-clone-ReactApp/src/components/header/Header.js",["42"],[],"import React from \"react\"\nimport \"./Header.css\"\nimport { Link } from \"react-router-dom\"\n\nconst Header = () => {\n    return (\n        <div className=\"header\">\n            <div className=\"headerLeft\">\n                <Link to=\"/\"><img className=\"header__icon\" src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/6/69/IMDB_Logo_2016.svg/2560px-IMDB_Logo_2016.svg.png\" /></Link>\n                <Link to=\"/movies/popular\" style={{textDecoration: \"none\"}}><span>Popular</span></Link>\n                <Link to=\"/movies/top_rated\" style={{textDecoration: \"none\"}}><span>Top Rated</span></Link>\n                <Link to=\"/movies/upcoming\" style={{textDecoration: \"none\"}}><span>Upcoming</span></Link>\n            </div>\n        </div>\n    )\n}\n\nexport default Header","/home/galya777/AWS/courseProject/IMDB-clone-ReactApp/src/components/movieList/movieList.js",["43","44"],[],"import React, {useEffect, useState} from \"react\"\nimport \"./movieList.css\"\nimport { useParams } from \"react-router-dom\"\nimport Cards from \"../card/card\"\n\nconst MovieList = () => {\n    \n    const [movieList, setMovieList] = useState([])\n    const {type} = useParams()\n\n    useEffect(() => {\n        getData()\n    }, [])\n\n    useEffect(() => {\n        getData()\n    }, [type])\n\n    const getData = () => {\n        fetch(`https://api.themoviedb.org/3/movie/${type ? type : \"popular\"}?api_key=4e44d9029b1270a757cddc766a1bcb63&language=en-US`)\n        .then(res => res.json())\n        .then(data => setMovieList(data.results))\n    }\n\n    return (\n        <div className=\"movie__list\">\n            <h2 className=\"list__title\">{(type ? type : \"POPULAR\").toUpperCase()}</h2>\n            <div className=\"list__cards\">\n                {\n                    movieList.map(movie => (\n                        <Cards movie={movie} />\n                    ))\n                }\n            </div>\n        </div>\n    )\n}\n\nexport default MovieList","/home/galya777/AWS/courseProject/IMDB-clone-ReactApp/src/pages/movieDetail/movie.js",["45","46","47","48","49","50"],[],"import React, {useEffect, useState} from \"react\"\nimport \"./movie.css\"\nimport { useParams } from \"react-router-dom\"\n\nconst Movie = () => {\n    const [currentMovieDetail, setMovie] = useState()\n    const { id } = useParams()\n\n    useEffect(() => {\n        getData()\n        window.scrollTo(0,0)\n    }, [])\n\n    const getData = () => {\n        fetch(`https://api.themoviedb.org/3/movie/${id}?api_key=4e44d9029b1270a757cddc766a1bcb63&language=en-US`)\n        .then(res => res.json())\n        .then(data => setMovie(data))\n    }\n\n    return (\n        <div className=\"movie\">\n            <div className=\"movie__intro\">\n                <img className=\"movie__backdrop\" src={`https://image.tmdb.org/t/p/original${currentMovieDetail ? currentMovieDetail.backdrop_path : \"\"}`} />\n            </div>\n            <div className=\"movie__detail\">\n                <div className=\"movie__detailLeft\">\n                    <div className=\"movie__posterBox\">\n                        <img className=\"movie__poster\" src={`https://image.tmdb.org/t/p/original${currentMovieDetail ? currentMovieDetail.poster_path : \"\"}`} />\n                    </div>\n                </div>\n                <div className=\"movie__detailRight\">\n                    <div className=\"movie__detailRightTop\">\n                        <div className=\"movie__name\">{currentMovieDetail ? currentMovieDetail.original_title : \"\"}</div>\n                        <div className=\"movie__tagline\">{currentMovieDetail ? currentMovieDetail.tagline : \"\"}</div>\n                        <div className=\"movie__rating\">\n                            {currentMovieDetail ? currentMovieDetail.vote_average: \"\"} <i class=\"fas fa-star\" />\n                            <span className=\"movie__voteCount\">{currentMovieDetail ? \"(\" + currentMovieDetail.vote_count + \") votes\" : \"\"}</span>\n                        </div>  \n                        <div className=\"movie__runtime\">{currentMovieDetail ? currentMovieDetail.runtime + \" mins\" : \"\"}</div>\n                        <div className=\"movie__releaseDate\">{currentMovieDetail ? \"Release date: \" + currentMovieDetail.release_date : \"\"}</div>\n                        <div className=\"movie__genres\">\n                            {\n                                currentMovieDetail && currentMovieDetail.genres\n                                ? \n                                currentMovieDetail.genres.map(genre => (\n                                    <><span className=\"movie__genre\" id={genre.id}>{genre.name}</span></>\n                                )) \n                                : \n                                \"\"\n                            }\n                        </div>\n                    </div>\n                    <div className=\"movie__detailRightBottom\">\n                        <div className=\"synopsisText\">Synopsis</div>\n                        <div>{currentMovieDetail ? currentMovieDetail.overview : \"\"}</div>\n                    </div>\n                    \n                </div>\n            </div>\n            <div className=\"movie__links\">\n                <div className=\"movie__heading\">Useful Links</div>\n                {\n                    currentMovieDetail && currentMovieDetail.homepage && <a href={currentMovieDetail.homepage} target=\"_blank\" style={{textDecoration: \"none\"}}><p><span className=\"movie__homeButton movie__Button\">Homepage <i className=\"newTab fas fa-external-link-alt\"></i></span></p></a>\n                }\n                {\n                    currentMovieDetail && currentMovieDetail.imdb_id && <a href={\"https://www.imdb.com/title/\" + currentMovieDetail.imdb_id} target=\"_blank\" style={{textDecoration: \"none\"}}><p><span className=\"movie__imdbButton movie__Button\">IMDb<i className=\"newTab fas fa-external-link-alt\"></i></span></p></a>\n                }\n            </div>\n            <div className=\"movie__heading\">Production companies</div>\n            <div className=\"movie__production\">\n                {\n                    currentMovieDetail && currentMovieDetail.production_companies && currentMovieDetail.production_companies.map(company => (\n                        <>\n                            {\n                                company.logo_path \n                                && \n                                <span className=\"productionCompanyImage\">\n                                    <img className=\"movie__productionComapany\" src={\"https://image.tmdb.org/t/p/original\" + company.logo_path} />\n                                    <span>{company.name}</span>\n                                </span>\n                            }\n                        </>\n                    ))\n                }\n            </div>\n        </div>\n    )\n}\n\nexport default Movie","/home/galya777/AWS/courseProject/IMDB-clone-ReactApp/src/pages/home/home.js",["51"],[],"import React, { useEffect, useState } from \"react\"\nimport \"./home.css\"\nimport \"react-responsive-carousel/lib/styles/carousel.min.css\";\nimport { Carousel } from 'react-responsive-carousel';\nimport { Link } from \"react-router-dom\";\nimport MovieList from \"../../components/movieList/movieList\";\n\nconst Home = () => {\n\n    const [ popularMovies, setPopularMovies ] = useState([])\n\n    useEffect(() => {\n        fetch(\"https://api.themoviedb.org/3/movie/popular?api_key=4e44d9029b1270a757cddc766a1bcb63&language=en-US\")\n        .then(res => res.json())\n        .then(data => setPopularMovies(data.results))\n    }, [])\n\n    return (\n        <>\n            <div className=\"poster\">\n                <Carousel\n                    showThumbs={false}\n                    autoPlay={true}\n                    transitionTime={3}\n                    infiniteLoop={true}\n                    showStatus={false}\n                >\n                    {\n                        popularMovies.map(movie => (\n                            <Link style={{textDecoration:\"none\",color:\"white\"}} to={`/movie/${movie.id}`} >\n                                <div className=\"posterImage\">\n                                    <img src={`https://image.tmdb.org/t/p/original${movie && movie.backdrop_path}`} />\n                                </div>\n                                <div className=\"posterImage__overlay\">\n                                    <div className=\"posterImage__title\">{movie ? movie.original_title: \"\"}</div>\n                                    <div className=\"posterImage__runtime\">\n                                        {movie ? movie.release_date : \"\"}\n                                        <span className=\"posterImage__rating\">\n                                            {movie ? movie.vote_average :\"\"}\n                                            <i className=\"fas fa-star\" />{\" \"}\n                                        </span>\n                                    </div>\n                                    <div className=\"posterImage__description\">{movie ? movie.overview : \"\"}</div>\n                                </div>\n                            </Link>\n                        ))\n                    }\n                </Carousel>\n                <MovieList />\n            </div>\n        </>\n    )\n}\n\nexport default Home","/home/galya777/AWS/courseProject/IMDB-clone-ReactApp/src/components/card/card.js",["52"],[],"import React, {useEffect, useState} from \"react\"\nimport Skeleton, { SkeletonTheme } from \"react-loading-skeleton\"\nimport \"./card.css\"\nimport { Link } from \"react-router-dom\"\n\nconst Cards = ({movie}) => {\n\n    const [isLoading, setIsLoading] = useState(true)\n\n    useEffect(() => {\n        setTimeout(() => {\n            setIsLoading(false)\n        }, 1500)\n    }, []) \n\n    return <>\n    {\n        isLoading\n        ?\n        <div className=\"cards\">\n            <SkeletonTheme color=\"#202020\" highlightColor=\"#444\">\n                <Skeleton height={300} duration={2} />\n            </SkeletonTheme>\n        </div>\n        :\n        <Link to={`/movie/${movie.id}`} style={{textDecoration:\"none\", color:\"white\"}}>\n            <div className=\"cards\">\n                <img className=\"cards__img\" src={`https://image.tmdb.org/t/p/original${movie?movie.poster_path:\"\"}`} />\n                <div className=\"cards__overlay\">\n                    <div className=\"card__title\">{movie?movie.original_title:\"\"}</div>\n                    <div className=\"card__runtime\">\n                        {movie?movie.release_date:\"\"}\n                        <span className=\"card__rating\">{movie?movie.vote_average:\"\"}<i className=\"fas fa-star\" /></span>\n                    </div>\n                    <div className=\"card__description\">{movie ? movie.overview.slice(0,118)+\"...\" : \"\"}</div>\n                </div>\n            </div>\n        </Link>\n    }\n    </>\n}\n\nexport default Cards",{"ruleId":"53","severity":1,"message":"54","line":9,"column":30,"nodeType":"55","endLine":9,"endColumn":175},{"ruleId":"56","severity":1,"message":"57","line":13,"column":8,"nodeType":"58","endLine":13,"endColumn":10,"suggestions":"59"},{"ruleId":"56","severity":1,"message":"57","line":17,"column":8,"nodeType":"58","endLine":17,"endColumn":14,"suggestions":"60"},{"ruleId":"56","severity":1,"message":"57","line":12,"column":8,"nodeType":"58","endLine":12,"endColumn":10,"suggestions":"61"},{"ruleId":"53","severity":1,"message":"54","line":23,"column":17,"nodeType":"55","endLine":23,"endColumn":157},{"ruleId":"53","severity":1,"message":"54","line":28,"column":25,"nodeType":"55","endLine":28,"endColumn":161},{"ruleId":"62","severity":1,"message":"63","line":63,"column":74,"nodeType":"55","messageId":"64","endLine":63,"endColumn":161,"fix":"65"},{"ruleId":"62","severity":1,"message":"63","line":66,"column":73,"nodeType":"55","messageId":"64","endLine":66,"endColumn":191,"fix":"66"},{"ruleId":"53","severity":1,"message":"54","line":78,"column":37,"nodeType":"55","endLine":78,"endColumn":146},{"ruleId":"53","severity":1,"message":"54","line":32,"column":37,"nodeType":"55","endLine":32,"endColumn":119},{"ruleId":"53","severity":1,"message":"54","line":28,"column":17,"nodeType":"55","endLine":28,"endColumn":120},"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getData'. Either include it or remove the dependency array.","ArrayExpression",["67"],["68"],["69"],"react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" (which implies rel=\"noopener\") is a security risk in older browsers: see https://mathiasbynens.github.io/rel-noopener/#recommendations","noTargetBlankWithoutNoreferrer",{"range":"70","text":"71"},{"range":"72","text":"71"},{"desc":"73","fix":"74"},{"desc":"75","fix":"76"},{"desc":"73","fix":"77"},[3296,3296]," rel=\"noreferrer\"",[3651,3651],"Update the dependencies array to be: [getData]",{"range":"78","text":"79"},"Update the dependencies array to be: [getData, type]",{"range":"80","text":"81"},{"range":"82","text":"79"},[314,316],"[getData]",[366,372],"[getData, type]",[300,302]]